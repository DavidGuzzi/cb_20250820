# Docker Compose with PostgreSQL for A/B Testing Migration
# Usage: docker-compose -f docker-compose.postgres.yml up -d

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: gatorade_postgres
    environment:
      POSTGRES_DB: gatorade_ab_testing
      POSTGRES_USER: gatorade_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-gatorade_dev_password}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=en_US.UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gatorade_user -d gatorade_ab_testing"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - gatorade_network

  # Backend (Flask API)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: gatorade_backend
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
      - PYTHONPATH=/app
      - DATABASE_URL=postgresql://gatorade_user:${DB_PASSWORD:-gatorade_dev_password}@db:5432/gatorade_ab_testing
    env_file:
      - .env
    volumes:
      - ./backend:/app
      - ./app_db_20251008_2014.xlsx:/app/app_db_20251008_2014.xlsx
      - /app/__pycache__
    command: python run.py
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - gatorade_network

  # Frontend (React + Vite)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: gatorade_frontend
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://localhost:5000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    command: npm run dev -- --host 0.0.0.0
    networks:
      - gatorade_network

  # pgAdmin (Optional - for database management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: gatorade_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@gatorade.com
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - db
    networks:
      - gatorade_network
    profiles:
      - tools  # Only start with: docker-compose --profile tools up

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  gatorade_network:
    driver: bridge
